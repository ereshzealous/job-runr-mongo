version: "3"
services:
  mongodb:
    image: mongo
    container_name: mogodb_1
    restart: always
    ports:
      - 27017:27017

# this is the dashboard. We start it first so that it can create all the tables correctly
  springboot-jobrunr-dashboard:
    image: app.jar
    environment:
      JOBRUNR_NUMBER_OF_RETRIES: "5"
      JOBRUNR_RETRY_BACK_OFF_TIME_SEED: "3"
      JOBRUNR_DATABASE_NAME: "demo"
      JOBRUNR_WORKER_COUNT: "8"
      JOBRUNR_DELETE_SUCCEEDEDJOBS_AFTER: "36"
      JOBRUNR_PERMANENTLY_DELETE_DELETED_JOBS_AFTER: "72"
      JOBRUNR_DASHBOARD_PORT: "9001"
      SPRING_DATA_MONGODB_URI: "mongodb://mongodb:27017/demo?retryWrites=true&w=majority&authSource=admin"

    ports:
      - "9001:9001"
      - "8080:8080"
    build:
      context: .
      dockerfile: "Dockerfile"
    depends_on:
      - mongodb

# this is the background job server. It depends on the dashboard so that it does not try to create the tables twice.
# We can scale this using docker compose up --scale springboot-backend=3
  springboot-backend:
    image: app.jar
    environment:
      JOBRUNR_NUMBER_OF_RETRIES: "5"
      JOBRUNR_RETRY_BACK_OFF_TIME_SEED: "3"
      JOBRUNR_DATABASE_NAME: "demo"
      JOBRUNR_WORKER_COUNT: "8"
      JOBRUNR_DELETE_SUCCEEDEDJOBS_AFTER: "36"
      JOBRUNR_PERMANENTLY_DELETE_DELETED_JOBS_AFTER: "72"
      JOBRUNR_DASHBOARD_PORT: "9001"
      SPRING_DATA_MONGODB_URI: "mongodb://mongodb:27017/demo?retryWrites=true&w=majority&authSource=admin"
    build:
      context: .
      dockerfile: "Dockerfile"
    depends_on:
      - mongodb
      - springboot-jobrunr-dashboard

networks:
  default:
    driver: bridge
